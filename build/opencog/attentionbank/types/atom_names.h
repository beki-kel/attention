/* File automatically generated by the macro OPENCOG_ADD_ATOM_TYPES. Do not edit */
#include <opencog/atoms/atom_types/atom_types.h>
#include <opencog/atoms/base/Handle.h>
#include <opencog/atoms/base/Node.h>
#include <opencog/atoms/base/Link.h>

namespace opencog {

#define NODE_CTOR(FUN,TYP) inline Handle FUN(std::string name) { return createNode(TYP, std::move(name)); }

#define LINK_CTOR(FUN,TYP) template<typename ...Atoms> inline Handle FUN(Atoms const&... atoms) { return createLink(TYP, atoms...); }

LINK_CTOR(AttentionValueOf, ATTENTION_VALUE_OF_LINK)
LINK_CTOR(StiOf, STI_OF_LINK)
LINK_CTOR(LtiOf, LTI_OF_LINK)
LINK_CTOR(Hebbian, HEBBIAN_LINK)
LINK_CTOR(AsymmetricHebbian, ASYMMETRIC_HEBBIAN_LINK)
LINK_CTOR(SymmetricHebbian, SYMMETRIC_HEBBIAN_LINK)
LINK_CTOR(InverseHebbian, INVERSE_HEBBIAN_LINK)
LINK_CTOR(SymmetricInverseHebbian, SYMMETRIC_INVERSE_HEBBIAN_LINK)
#undef NODE_CTOR
#undef LINK_CTOR
} // namespace opencog
